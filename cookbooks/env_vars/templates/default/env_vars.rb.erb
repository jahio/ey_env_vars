require 'rubygems'
require 'yaml'
require 'pg'

db_creds = YAML.load(File.read(File.join('', 'data', '<%= @app_name %>',
           'shared', 'config', 'database.yml')))
config_location = File.join('', 'data', '<%= @app_name %>',
                            'shared', 'config', 'env.custom')

# Execute the below in a begin/ensure block to make sure we close the db conn.
# Writes out the env.custom file, obliterating whatever *was* there to begin
# with because it no longer matters.
begin
  conn = PG::Connection.open(dbname: 'env_vars', port: '5432',
    user:     db_creds['<%= @run_env %>']['username'],
    password: db_creds['<%= @run_env %>']['password'],
    host:     db_creds['<%= @run_env %>']['host'])

  # Next, look for variables inside the table and write them out to env.custom.
  res = conn.exec('SELECT variable_name, variable_value
                   FROM environment_variables')
  File.open(config_location, "w") do |f|
    f.puts "# This file is generated by custom chef. Its source is located"
    f.puts "# in custom recipes under cookbooks/env_vars/templates/default/env_vars.rb.erb"
    f.puts "# DO NOT try to modify this file! Your changes will only be"
    f.puts "# overwritten when the next chef run occurs. Instead, modify the"
    f.puts "# source code."
    f.puts "# ----------------------------------------------------------------------------"

    res.each do |pair|
      f.puts %Q(export #{pair['variable_name']}="#{pair['variable_value']}")
    end
  end
ensure
  conn.flush && conn.close # flush everything and clean up
end
